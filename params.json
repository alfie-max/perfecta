{"name":"Perfecta","tagline":"Ruby client for the PerfectAudience API","body":"# Perfecta\r\n\r\nRuby client for the Perfect Audience [reporting\r\napi](https://www.perfectaudience.com/docs#data_api_autoopen)\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'perfecta'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install perfecta\r\n\r\n## Usage\r\n\r\n### Create a new instance of the Perfecta Client\r\n\r\n```ruby\r\nclient = Perfecta::Client.new do |c|\r\n  c.email = 'email@ddress'\r\n  c.password = 'password'\r\nend\r\n```\r\n\r\nThis will exchange the credentials for an API token and use this token\r\nfor all subsequent calls.\r\n\r\nYou can now use the client instance to query the API.\r\n\r\n###Â List all Campaign Reports\r\n\r\n```ruby\r\np client.campaign_reports.inspect\r\n```\r\n\r\nOptional Query Parameters include\r\n\r\n| Name          | Type                                                          |\r\n| ------------- |:-------------------------------------------------------------:|\r\n| interval      | ['today','yesterday','last_7_days','last_30_days','lifetime'] |\r\n| start_date    | 'YYYY-MM-DD'                                                  |\r\n| end_date      | 'YYYY-MM-DD'                                                  |\r\n| site_id       | 'the_site_id'                                                 |\r\n| campaign_id   | 'the_site_id'                                                 |\r\n\r\nand can be used by supplying a hash e.g.\r\n\r\n```ruby\r\np client.campaign_reports(interval: 'yesterday').inspect\r\n```\r\n\r\n### List all Ad Reports\r\n\r\n```ruby\r\np client.ad_reports.inspect\r\n```\r\n\r\nAny of the additional query parameters from the above table can be supplied as a hash.\r\n\r\n### List all Conversion Reports\r\n\r\n```ruby\r\np client.conversion_reports.inspect\r\n```\r\n\r\nAny of the additional query parameters from the above table can be supplied as a hash.\r\n\r\n### List all Sites\r\n\r\n```ruby\r\np client.sites.inspect\r\n```\r\n\r\n### Show a single Site\r\n\r\n```ruby\r\np client.site('SITE_ID').inspect\r\n```\r\n\r\n### List all Campaigns\r\n\r\n```ruby\r\np client.campaigns.inspect\r\n```\r\n\r\n### Show a single Campaign\r\n\r\n```ruby\r\np client.campaign('CAMPAIGN_ID').inspect\r\n```\r\n\r\n### List all Ads\r\n\r\n```ruby\r\np client.ads.inspect\r\n```\r\n\r\n### Show a single Ad\r\n\r\n```ruby\r\np client.ad('AD_ID').inspect\r\n```\r\n\r\n### List all Segments\r\n\r\n```ruby\r\np client.segments.inspect\r\n```\r\n\r\n### Show a single Segment\r\n\r\n```ruby\r\np client.segment('SEGMENT_ID').inspect\r\n```\r\n\r\n### List all Conversions\r\n\r\n```ruby\r\np client.conversions.inspect\r\n```\r\n\r\n### Show a single Conversion\r\n\r\n```ruby\r\np client.conversion('CONVERSION_ID').inspect\r\n```\r\n\r\n## TODO\r\n\r\n1. ~~Flesh out the rest of the API~~\r\n2. ~~Accept query parameters~~\r\n3. Error handling, specifically for when token expires\r\n4. Relationships and delegation between of objects\r\n5. ~~Get rid of all the duplication~~\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"UA-39572556-1","note":"Don't delete this file! It's used internally to help with page regeneration."}